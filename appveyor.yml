#os: Visual Studio 2015
environment:
  global:
    CYG_ROOT: C:\cygwin
    CYG_MIRROR: http://cygwin.mirror.constant.com
    CYG_CACHE: C:\cygwin\var\cache\setup
    CYG_BASH: C:\cygwin\bin\bash
  matrix:
  - nodejs_version: "0.10"
  - nodejs_version: "0.12"
  - nodejs_version: "3"
  - nodejs_version: "4"
  - nodejs_version: "5"

#
# Cache Cygwin files to speed up build
#
cache:
  - '%CYG_CACHE%'
#
# Do a shallow clone of the repo to speed up build
#
clone_depth: 1

#
# Attempt to ensure we don't try to convert line endings to Win32 CRLF as this will cause build to fail
#
init:
  - git config --global core.autocrlf input

# Install scripts. (runs after repo cloning)
install:
#  - ps: 'Start-FileDownload "http://cygwin.com/setup-x86.exe" -FileName "setup-x86.exe"'
#  - 'setup-x86.exe --quiet-mode --no-shortcuts --only-site --root "%CYG_ROOT%" --site "%CYG_MIRROR%" --local-package-dir "%CYG_CACHE%" --packages autoconf,automake,bison,gcc-core,gcc-g++,mingw-runtime,mingw-binutils,mingw-gcc-core,mingw-gcc-g++,mingw-pthreads,mingw-w32api,libtool,make,python,gettext-devel,gettext,intltool,libiconv,pkg-config,git,curl,libxslt,mingw-dbus,mingw-w64-dbus,expat'
#  - '%CYG_BASH% -lc "cygcheck -dc cygwin"'
#  - set PATH=C:\msys64\usr\bin;%PATH%
#  - bash --login -c "pacman -Q"
#  - bash --login -c "pacman -S --noconfirm python mingw-w64-x86_64-gnutls mingw-w64-x86_64-libiconv mingw-w64-i686-gnutls mingw-w64-i686-libiconv expat"
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version
  # install modules
  - "nuget install expat -Version 2.1.0.11"
  - "curl -LO https://dbus.freedesktop.org/releases/dbus/dbus-1.9.16.tar.gz"
  - "7z e dbus-1.9.16.tar.gz > nul"
  - "7z x dbus-1.9.16.tar > nul"
  - "cd dbus-1.9.16"
  - "mkdir build && cd build"
  - '"C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x86'
  - "cmake -DEXPAT_INCLUDE_DIR=\"expat.2.1.0.11\\build\\native\\include\" -DEXPAT_LIBRARY=\"expat.2.1.0.11\\build\\native\\lib\\v110\\Win32\\Release\\static\\utf8\\libexpat.lib\" ..\\cmake"
  - cd C:/projects/node-dbus/dbus-1.9.16/build
  - "nmake"
  - cd ..
  - cd ..
  - npm install

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  # run tests
  - npm test

# Don't actually build.
build: off
